#!/bin/sh

# Creates a new branch of the current repository,
# in a sibling directory named REPONAME-branch-NEWBRANCHNAME/.
#
# Usage:
#   git-new-branch NEWBRANCHNAME

if [ "$#" -ne 1 ]; then
  echo "Usage: $(basename "$0") NEWBRANCHNAME" >&2
  exit 1
fi

if ! cd "$(git rev-parse --show-toplevel 2>&1)"; then
  echo "$(basename "$0"): Cannot determine top-level directory of git repository"
  git rev-parse --show-toplevel
  return 1
fi

REPO=$(basename "$(pwd)")
BRANCHNAME="$1"
BRANCHNOSLASH=$(echo "${BRANCHNAME}" | sed -e "s:/:-:g")
BRANCHDIR=$(realpath "../${REPO%%-branch-*}-branch-${BRANCHNOSLASH}")
TMPDIR="${BRANCHDIR}-TMP"

git pull -q >/dev/null 2>&1 || true

if [ -n "$(git branch -r --list "origin/${BRANCHNAME}")" ]; then
  echo "$(basename "$0"): ERROR: branch ${BRANCHNAME} already exists."
  exit 1
else
  if git ls-remote --exit-code origin "${BRANCHNAME}"; then
    echo "$(basename "$0"): ERROR: branch ${BRANCHNAME} already exists."
    exit 1
  fi
fi

if [ -e "${BRANCHDIR}" ]; then
  echo "$(basename "$0"): ERROR: directory exists: ${BRANCHDIR}"
  exit 1
fi
if [ -e "${TMPDIR}" ]; then
  echo "$(basename "$0"): ERROR: directory exists: ${TMPDIR}"
  exit 1
fi

if ! \cp -Rp . "${TMPDIR}"; then
  echo "$(basename "$0"): ERROR: cannot copy $(pwd) to ${TMPDIR}"
  exit 1
fi
if ! (cd "${TMPDIR}" && git checkout -b "${BRANCHNAME}" -q); then
  echo "$(basename "$0"): ERROR in: (cd \"${TMPDIR}\" && git checkout -b \"${BRANCHNAME}\" -q)"
  exit 1
fi
if ! mv "${TMPDIR}" "${BRANCHDIR}"; then
  echo "$(basename "$0"): ERROR in: mv \"${TMPDIR}\" \"${BRANCHDIR}\""
  exit 1
fi

if ! cd "${BRANCHDIR}"; then
  echo "$(basename "$0"): ERROR in: cd \"${BRANCHDIR}\""
  exit 1
fi

echo "Success: created ${BRANCHDIR}"
